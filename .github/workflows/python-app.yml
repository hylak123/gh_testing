# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: 4259d927865045c5ea89f7c0b809219c64d7c540
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -s "test_github.py::TestGithub::test_repo_init"
        pytest -s "test_github.py::TestGithub::test_open_existing_repo"
        # pytest -s "test_github.py::TestGithub::test_commit"
        # pytest -s "test_github.py::TestGithub::test_create_new_branch"
        pytest -s "test_github.py::TestGithub::test_switch_branch"
        # pytest -s "test_github.py::TestGithub::test_pull"
        pytest -s "test_github.py::TestGithub::test_push"        
        # pytest -m CI
    # - name: Generate pytest report
    #   run: |
    #     pytest -m smoke --html=.\html_reports\report_gh_test.html --self-contained-html
